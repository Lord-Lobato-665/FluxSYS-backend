// <auto-generated />
using System;
using FluxSYS_backend.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluxSYS_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesProducts", b =>
                {
                    b.Property<int>("Id_category_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_category_product"));

                    b.Property<bool>("Delete_log_category_product")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_category_product")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_category_product");

                    b.HasIndex("Id_company_Id");

                    b.ToTable("categories_products");

                    b.HasData(
                        new
                        {
                            Id_category_product = 1,
                            Delete_log_category_product = false,
                            Id_company_Id = 1,
                            Name_category_product = "Electrónica"
                        },
                        new
                        {
                            Id_category_product = 2,
                            Delete_log_category_product = false,
                            Id_company_Id = 2,
                            Name_category_product = "Muebles"
                        },
                        new
                        {
                            Id_category_product = 3,
                            Delete_log_category_product = false,
                            Id_company_Id = 3,
                            Name_category_product = "Ropa"
                        },
                        new
                        {
                            Id_category_product = 4,
                            Delete_log_category_product = false,
                            Id_company_Id = 4,
                            Name_category_product = "Alimentos"
                        },
                        new
                        {
                            Id_category_product = 5,
                            Delete_log_category_product = false,
                            Id_company_Id = 1,
                            Name_category_product = "Herramientas"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesPurchaseOrders", b =>
                {
                    b.Property<int>("Id_category_purchase_order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_category_purchase_order"));

                    b.Property<bool>("Delete_log_category_purchase_order")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_category_purchase_order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_category_purchase_order");

                    b.HasIndex("Id_company_Id");

                    b.ToTable("categories_purchase_orders");

                    b.HasData(
                        new
                        {
                            Id_category_purchase_order = 1,
                            Delete_log_category_purchase_order = false,
                            Id_company_Id = 1,
                            Name_category_purchase_order = "Interna"
                        },
                        new
                        {
                            Id_category_purchase_order = 2,
                            Delete_log_category_purchase_order = false,
                            Id_company_Id = 2,
                            Name_category_purchase_order = "Externa"
                        },
                        new
                        {
                            Id_category_purchase_order = 3,
                            Delete_log_category_purchase_order = false,
                            Id_company_Id = 3,
                            Name_category_purchase_order = "Urgente"
                        },
                        new
                        {
                            Id_category_purchase_order = 4,
                            Delete_log_category_purchase_order = false,
                            Id_company_Id = 4,
                            Name_category_purchase_order = "Planificada"
                        },
                        new
                        {
                            Id_category_purchase_order = 5,
                            Delete_log_category_purchase_order = false,
                            Id_company_Id = 1,
                            Name_category_purchase_order = "Especial"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesSuppliers", b =>
                {
                    b.Property<int>("Id_category_supplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_category_supplier"));

                    b.Property<bool>("Delete_log_category_supplier")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_category_supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_category_supplier");

                    b.HasIndex("Id_company_Id");

                    b.ToTable("categories_suppliers");

                    b.HasData(
                        new
                        {
                            Id_category_supplier = 1,
                            Delete_log_category_supplier = false,
                            Id_company_Id = 1,
                            Name_category_supplier = "Tecnología"
                        },
                        new
                        {
                            Id_category_supplier = 2,
                            Delete_log_category_supplier = false,
                            Id_company_Id = 2,
                            Name_category_supplier = "Alimentos"
                        },
                        new
                        {
                            Id_category_supplier = 3,
                            Delete_log_category_supplier = false,
                            Id_company_Id = 3,
                            Name_category_supplier = "Materiales de Construcción"
                        },
                        new
                        {
                            Id_category_supplier = 4,
                            Delete_log_category_supplier = false,
                            Id_company_Id = 4,
                            Name_category_supplier = "Suministros de Oficina"
                        },
                        new
                        {
                            Id_category_supplier = 5,
                            Delete_log_category_supplier = false,
                            Id_company_Id = 1,
                            Name_category_supplier = "Productos Químicos"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.ClasificationMovements", b =>
                {
                    b.Property<int>("Id_clasification_movement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_clasification_movement"));

                    b.Property<bool>("Delete_log_clasification_movement")
                        .HasColumnType("bit");

                    b.Property<string>("Name_clasification_movement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_clasification_movement");

                    b.ToTable("clasification_movements");

                    b.HasData(
                        new
                        {
                            Id_clasification_movement = 1,
                            Delete_log_clasification_movement = false,
                            Name_clasification_movement = "Eliminacion"
                        },
                        new
                        {
                            Id_clasification_movement = 2,
                            Delete_log_clasification_movement = false,
                            Name_clasification_movement = "Creacion"
                        },
                        new
                        {
                            Id_clasification_movement = 3,
                            Delete_log_clasification_movement = false,
                            Name_clasification_movement = "Actualizacion"
                        },
                        new
                        {
                            Id_clasification_movement = 4,
                            Delete_log_clasification_movement = false,
                            Name_clasification_movement = "Restauracion"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", b =>
                {
                    b.Property<int>("Id_company")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_company"));

                    b.Property<bool>("Delete_log_company")
                        .HasColumnType("bit");

                    b.Property<string>("Name_company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_company");

                    b.ToTable("companies");

                    b.HasData(
                        new
                        {
                            Id_company = 1,
                            Delete_log_company = false,
                            Name_company = "FluxSYS"
                        },
                        new
                        {
                            Id_company = 2,
                            Delete_log_company = false,
                            Name_company = "Global Solutions"
                        },
                        new
                        {
                            Id_company = 3,
                            Delete_log_company = false,
                            Name_company = "NextGen Systems"
                        },
                        new
                        {
                            Id_company = 4,
                            Delete_log_company = false,
                            Name_company = "Future Enterprises"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", b =>
                {
                    b.Property<int>("Id_department")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_department"));

                    b.Property<bool>("Delete_log_department")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_deparment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_department");

                    b.HasIndex("Id_company_Id");

                    b.ToTable("departments");

                    b.HasData(
                        new
                        {
                            Id_department = 1,
                            Delete_log_department = false,
                            Id_company_Id = 1,
                            Name_deparment = "System"
                        },
                        new
                        {
                            Id_department = 2,
                            Delete_log_department = false,
                            Id_company_Id = 2,
                            Name_deparment = "Tecnología"
                        },
                        new
                        {
                            Id_department = 3,
                            Delete_log_department = false,
                            Id_company_Id = 3,
                            Name_deparment = "Ventas"
                        },
                        new
                        {
                            Id_department = 4,
                            Delete_log_department = false,
                            Id_company_Id = 4,
                            Name_deparment = "Logística"
                        },
                        new
                        {
                            Id_department = 5,
                            Delete_log_department = false,
                            Id_company_Id = 1,
                            Name_deparment = "Finanzas"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", b =>
                {
                    b.Property<int>("Id_module")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_module"));

                    b.Property<bool>("Delete_log_module")
                        .HasColumnType("bit");

                    b.Property<string>("Name_module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_module");

                    b.ToTable("modules");

                    b.HasData(
                        new
                        {
                            Id_module = 1,
                            Delete_log_module = false,
                            Name_module = "Proveedores"
                        },
                        new
                        {
                            Id_module = 2,
                            Delete_log_module = false,
                            Name_module = "Auditorias"
                        },
                        new
                        {
                            Id_module = 3,
                            Delete_log_module = false,
                            Name_module = "Inventario"
                        },
                        new
                        {
                            Id_module = 4,
                            Delete_log_module = false,
                            Name_module = "Facturas"
                        },
                        new
                        {
                            Id_module = 5,
                            Delete_log_module = false,
                            Name_module = "Ordenes de compra"
                        },
                        new
                        {
                            Id_module = 6,
                            Delete_log_module = false,
                            Name_module = "Usuarios"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.MovementsTypes", b =>
                {
                    b.Property<int>("Id_movement_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_movement_type"));

                    b.Property<bool>("Delete_log_movement_type")
                        .HasColumnType("bit");

                    b.Property<int>("Id_clasification_movement_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_movement_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_movement_type");

                    b.HasIndex("Id_clasification_movement_Id");

                    b.HasIndex("Id_company_Id");

                    b.ToTable("movements_types");

                    b.HasData(
                        new
                        {
                            Id_movement_type = 1,
                            Delete_log_movement_type = false,
                            Id_clasification_movement_Id = 1,
                            Id_company_Id = 1,
                            Name_movement_type = "Entrada de Mercancía"
                        },
                        new
                        {
                            Id_movement_type = 2,
                            Delete_log_movement_type = false,
                            Id_clasification_movement_Id = 2,
                            Id_company_Id = 2,
                            Name_movement_type = "Salida por Venta"
                        },
                        new
                        {
                            Id_movement_type = 3,
                            Delete_log_movement_type = false,
                            Id_clasification_movement_Id = 3,
                            Id_company_Id = 3,
                            Name_movement_type = "Ajuste por Pérdida"
                        },
                        new
                        {
                            Id_movement_type = 4,
                            Delete_log_movement_type = false,
                            Id_clasification_movement_Id = 1,
                            Id_company_Id = 1,
                            Name_movement_type = "Transferencia de Almacén"
                        },
                        new
                        {
                            Id_movement_type = 5,
                            Delete_log_movement_type = false,
                            Id_clasification_movement_Id = 2,
                            Id_company_Id = 2,
                            Name_movement_type = "Devolución de Producto"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.OrdersProducts", b =>
                {
                    b.Property<int>("Id_order_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_order_product"));

                    b.Property<int>("Id_inventory_product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_purchase_order_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id_order_product");

                    b.HasIndex("Id_inventory_product_Id");

                    b.HasIndex("Id_purchase_order_Id");

                    b.ToTable("orders_products");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Positions", b =>
                {
                    b.Property<int>("Id_position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_position"));

                    b.Property<bool>("Delete_log_position")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_position");

                    b.HasIndex("Id_company_Id");

                    b.ToTable("positions");

                    b.HasData(
                        new
                        {
                            Id_position = 1,
                            Delete_log_position = false,
                            Id_company_Id = 1,
                            Name_position = "System"
                        },
                        new
                        {
                            Id_position = 2,
                            Delete_log_position = false,
                            Id_company_Id = 2,
                            Name_position = "Supervisor"
                        },
                        new
                        {
                            Id_position = 3,
                            Delete_log_position = false,
                            Id_company_Id = 3,
                            Name_position = "Analista"
                        },
                        new
                        {
                            Id_position = 4,
                            Delete_log_position = false,
                            Id_company_Id = 4,
                            Name_position = "Técnico"
                        },
                        new
                        {
                            Id_position = 5,
                            Delete_log_position = false,
                            Id_company_Id = 1,
                            Name_position = "Asistente"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Roles", b =>
                {
                    b.Property<int>("Id_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_role"));

                    b.Property<bool>("Delete_log_role")
                        .HasColumnType("bit");

                    b.Property<string>("Name_role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_role");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id_role = 1,
                            Delete_log_role = false,
                            Name_role = "Administrador"
                        },
                        new
                        {
                            Id_role = 2,
                            Delete_log_role = false,
                            Name_role = "Administrador Empresarial"
                        },
                        new
                        {
                            Id_role = 3,
                            Delete_log_role = false,
                            Name_role = "Jefe de Departamento"
                        },
                        new
                        {
                            Id_role = 4,
                            Delete_log_role = false,
                            Name_role = "Subjefe de Departamento"
                        },
                        new
                        {
                            Id_role = 5,
                            Delete_log_role = false,
                            Name_role = "Colaborador"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.States", b =>
                {
                    b.Property<int>("Id_state")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_state"));

                    b.Property<bool>("Delete_log_state")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_state");

                    b.HasIndex("Id_company_Id");

                    b.ToTable("states");

                    b.HasData(
                        new
                        {
                            Id_state = 1,
                            Delete_log_state = false,
                            Id_company_Id = 1,
                            Name_state = "Activo"
                        },
                        new
                        {
                            Id_state = 2,
                            Delete_log_state = false,
                            Id_company_Id = 2,
                            Name_state = "Inactivo"
                        },
                        new
                        {
                            Id_state = 3,
                            Delete_log_state = false,
                            Id_company_Id = 3,
                            Name_state = "Pendiente"
                        },
                        new
                        {
                            Id_state = 4,
                            Delete_log_state = false,
                            Id_company_Id = 1,
                            Name_state = "En Proceso"
                        },
                        new
                        {
                            Id_state = 5,
                            Delete_log_state = false,
                            Id_company_Id = 2,
                            Name_state = "Finalizado"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", b =>
                {
                    b.Property<int>("Id_supplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_supplier"));

                    b.Property<DateTime?>("Date_delete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_insert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_restore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_update")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete_log_suppliers")
                        .HasColumnType("bit");

                    b.Property<int>("Id_category_supplier_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_module_Id")
                        .HasColumnType("int");

                    b.Property<string>("Mail_supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone_supplier")
                        .HasColumnType("bigint");

                    b.HasKey("Id_supplier");

                    b.HasIndex("Id_category_supplier_Id");

                    b.HasIndex("Id_company_Id");

                    b.HasIndex("Id_module_Id");

                    b.ToTable("suppliers");

                    b.HasData(
                        new
                        {
                            Id_supplier = 1,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_suppliers = false,
                            Id_category_supplier_Id = 1,
                            Id_company_Id = 1,
                            Id_module_Id = 1,
                            Mail_supplier = "contacto@proveedora.com",
                            Name_supplier = "Proveedor A",
                            Phone_supplier = 5512345678L
                        },
                        new
                        {
                            Id_supplier = 2,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_suppliers = false,
                            Id_category_supplier_Id = 2,
                            Id_company_Id = 2,
                            Id_module_Id = 1,
                            Mail_supplier = "ventas@proveedorb.com",
                            Name_supplier = "Proveedor B",
                            Phone_supplier = 5523456789L
                        },
                        new
                        {
                            Id_supplier = 3,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_suppliers = false,
                            Id_category_supplier_Id = 3,
                            Id_company_Id = 3,
                            Id_module_Id = 1,
                            Mail_supplier = "info@distribuidorac.com",
                            Name_supplier = "Distribuidora C",
                            Phone_supplier = 5534567890L
                        },
                        new
                        {
                            Id_supplier = 4,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_suppliers = false,
                            Id_category_supplier_Id = 4,
                            Id_company_Id = 1,
                            Id_module_Id = 1,
                            Mail_supplier = "soporte@empresad.com",
                            Name_supplier = "Empresa D",
                            Phone_supplier = 5545678901L
                        },
                        new
                        {
                            Id_supplier = 5,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_suppliers = false,
                            Id_category_supplier_Id = 5,
                            Id_company_Id = 2,
                            Id_module_Id = 1,
                            Mail_supplier = "compras@mayoristae.com",
                            Name_supplier = "Mayorista E",
                            Phone_supplier = 5556789012L
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.SuppliersProducts", b =>
                {
                    b.Property<int>("Id_supplier_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_supplier_product"));

                    b.Property<int>("Id_inventory_product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_supplier_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Suggested_price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id_supplier_product");

                    b.HasIndex("Id_inventory_product_Id");

                    b.HasIndex("Id_supplier_Id");

                    b.ToTable("suppliers_products");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.Audits", b =>
                {
                    b.Property<int>("Id_audit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_audit"));

                    b.Property<int>("Amount_modify")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_delete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_insert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_restore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_update")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete_log_audits")
                        .HasColumnType("bit");

                    b.Property<string>("Name_company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_audit");

                    b.ToTable("audits");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.ErrorLogs", b =>
                {
                    b.Property<int>("Id_error_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_error_log"));

                    b.Property<string>("Message_error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source_error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stacktrace_error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_error_log");

                    b.ToTable("error_logs");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.Inventories", b =>
                {
                    b.Property<int>("Id_inventory_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_inventory_product"));

                    b.Property<DateTime?>("Date_delete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_insert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_restore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_update")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete_log_inventory")
                        .HasColumnType("bit");

                    b.Property<int>("Id_category_product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_department_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_module_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_movement_type_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_state_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_supplier_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_user_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_product")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price_product")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Stock_product")
                        .HasColumnType("int");

                    b.HasKey("Id_inventory_product");

                    b.HasIndex("Id_category_product_Id");

                    b.HasIndex("Id_company_Id");

                    b.HasIndex("Id_department_Id");

                    b.HasIndex("Id_module_Id");

                    b.HasIndex("Id_movement_type_Id");

                    b.HasIndex("Id_state_Id");

                    b.HasIndex("Id_supplier_Id");

                    b.HasIndex("Id_user_Id");

                    b.ToTable("inventory");

                    b.HasData(
                        new
                        {
                            Id_inventory_product = 1,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_inventory = false,
                            Id_category_product_Id = 1,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 3,
                            Id_movement_type_Id = 1,
                            Id_state_Id = 1,
                            Id_supplier_Id = 1,
                            Id_user_Id = 1,
                            Name_product = "Laptop Dell XPS 15",
                            Price_product = 25000.00m,
                            Stock_product = 10
                        },
                        new
                        {
                            Id_inventory_product = 2,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_inventory = false,
                            Id_category_product_Id = 2,
                            Id_company_Id = 2,
                            Id_department_Id = 2,
                            Id_module_Id = 3,
                            Id_movement_type_Id = 2,
                            Id_state_Id = 2,
                            Id_supplier_Id = 2,
                            Id_user_Id = 2,
                            Name_product = "Monitor Samsung 27\"",
                            Price_product = 7500.00m,
                            Stock_product = 20
                        },
                        new
                        {
                            Id_inventory_product = 3,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_inventory = false,
                            Id_category_product_Id = 3,
                            Id_company_Id = 3,
                            Id_department_Id = 3,
                            Id_module_Id = 3,
                            Id_movement_type_Id = 1,
                            Id_state_Id = 1,
                            Id_supplier_Id = 3,
                            Id_user_Id = 3,
                            Name_product = "Teclado Mecánico HyperX",
                            Price_product = 3500.00m,
                            Stock_product = 15
                        },
                        new
                        {
                            Id_inventory_product = 4,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_inventory = false,
                            Id_category_product_Id = 4,
                            Id_company_Id = 1,
                            Id_department_Id = 4,
                            Id_module_Id = 3,
                            Id_movement_type_Id = 2,
                            Id_state_Id = 2,
                            Id_supplier_Id = 4,
                            Id_user_Id = 4,
                            Name_product = "Mouse Logitech MX Master 3",
                            Price_product = 2500.00m,
                            Stock_product = 25
                        },
                        new
                        {
                            Id_inventory_product = 5,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_inventory = false,
                            Id_category_product_Id = 5,
                            Id_company_Id = 2,
                            Id_department_Id = 5,
                            Id_module_Id = 3,
                            Id_movement_type_Id = 3,
                            Id_state_Id = 3,
                            Id_supplier_Id = 5,
                            Id_user_Id = 5,
                            Name_product = "Silla Ergonómica",
                            Price_product = 12000.00m,
                            Stock_product = 5
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.InventoryMovements", b =>
                {
                    b.Property<int>("Id_inventory_movement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_inventory_movement"));

                    b.Property<int>("Amount_modify")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_delete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_insert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_restore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_update")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete_log_inventory_movement")
                        .HasColumnType("bit");

                    b.Property<int>("Id_category_product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_department_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_inventory_product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_module_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_movements_types_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_supplier_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_user_Id")
                        .HasColumnType("int");

                    b.HasKey("Id_inventory_movement");

                    b.HasIndex("Id_category_product_Id");

                    b.HasIndex("Id_company_Id");

                    b.HasIndex("Id_department_Id");

                    b.HasIndex("Id_inventory_product_Id");

                    b.HasIndex("Id_module_Id");

                    b.HasIndex("Id_movements_types_Id");

                    b.HasIndex("Id_supplier_Id");

                    b.HasIndex("Id_user_Id");

                    b.ToTable("inventory_movements");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.Invoices", b =>
                {
                    b.Property<int>("Id_invoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_invoice"));

                    b.Property<int>("Amount_items_in_the_invoice")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_delete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_insert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_restore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_update")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete_log_invoices")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_department_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_module_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_purchase_order_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_supplier_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_invoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_invoice");

                    b.HasIndex("Id_company_Id");

                    b.HasIndex("Id_department_Id");

                    b.HasIndex("Id_module_Id");

                    b.HasIndex("Id_purchase_order_Id");

                    b.HasIndex("Id_supplier_Id");

                    b.ToTable("invoices");

                    b.HasData(
                        new
                        {
                            Id_invoice = 1,
                            Amount_items_in_the_invoice = 5,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_invoices = false,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 4,
                            Id_purchase_order_Id = 1,
                            Id_supplier_Id = 1,
                            Name_invoice = "Factura 001"
                        },
                        new
                        {
                            Id_invoice = 2,
                            Amount_items_in_the_invoice = 8,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_invoices = false,
                            Id_company_Id = 1,
                            Id_department_Id = 2,
                            Id_module_Id = 4,
                            Id_purchase_order_Id = 2,
                            Id_supplier_Id = 2,
                            Name_invoice = "Factura 002"
                        },
                        new
                        {
                            Id_invoice = 3,
                            Amount_items_in_the_invoice = 3,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_invoices = false,
                            Id_company_Id = 2,
                            Id_department_Id = 3,
                            Id_module_Id = 4,
                            Id_purchase_order_Id = 3,
                            Id_supplier_Id = 3,
                            Name_invoice = "Factura 003"
                        },
                        new
                        {
                            Id_invoice = 4,
                            Amount_items_in_the_invoice = 12,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_invoices = false,
                            Id_company_Id = 2,
                            Id_department_Id = 4,
                            Id_module_Id = 4,
                            Id_purchase_order_Id = 4,
                            Id_supplier_Id = 4,
                            Name_invoice = "Factura 004"
                        },
                        new
                        {
                            Id_invoice = 5,
                            Amount_items_in_the_invoice = 7,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_invoices = false,
                            Id_company_Id = 3,
                            Id_department_Id = 5,
                            Id_module_Id = 4,
                            Id_purchase_order_Id = 5,
                            Id_supplier_Id = 5,
                            Name_invoice = "Factura 005"
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.PurchaseOrders", b =>
                {
                    b.Property<int>("Id_purchase_order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_purchase_order"));

                    b.Property<int>("Amount_items_in_the_order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_delete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_insert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_restore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_update")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete_log_purchase_orders")
                        .HasColumnType("bit");

                    b.Property<int>("Id_category_purchase_order_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_department_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_module_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_movement_type_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_state_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_supplier_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_user_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_purchase_order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total_price_products")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id_purchase_order");

                    b.HasIndex("Id_category_purchase_order_Id");

                    b.HasIndex("Id_company_Id");

                    b.HasIndex("Id_department_Id");

                    b.HasIndex("Id_module_Id");

                    b.HasIndex("Id_movement_type_Id");

                    b.HasIndex("Id_state_Id");

                    b.HasIndex("Id_supplier_Id");

                    b.HasIndex("Id_user_Id");

                    b.ToTable("purchase_orders");

                    b.HasData(
                        new
                        {
                            Id_purchase_order = 1,
                            Amount_items_in_the_order = 5,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_purchase_orders = false,
                            Id_category_purchase_order_Id = 1,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 5,
                            Id_movement_type_Id = 1,
                            Id_state_Id = 1,
                            Id_supplier_Id = 1,
                            Id_user_Id = 1,
                            Name_purchase_order = "Orden de Compra 001",
                            Total_price_products = 1500.50m
                        },
                        new
                        {
                            Id_purchase_order = 2,
                            Amount_items_in_the_order = 8,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_purchase_orders = false,
                            Id_category_purchase_order_Id = 2,
                            Id_company_Id = 1,
                            Id_department_Id = 2,
                            Id_module_Id = 5,
                            Id_movement_type_Id = 2,
                            Id_state_Id = 2,
                            Id_supplier_Id = 2,
                            Id_user_Id = 2,
                            Name_purchase_order = "Orden de Compra 002",
                            Total_price_products = 2450.75m
                        },
                        new
                        {
                            Id_purchase_order = 3,
                            Amount_items_in_the_order = 3,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_purchase_orders = false,
                            Id_category_purchase_order_Id = 3,
                            Id_company_Id = 2,
                            Id_department_Id = 3,
                            Id_module_Id = 5,
                            Id_movement_type_Id = 3,
                            Id_state_Id = 3,
                            Id_supplier_Id = 3,
                            Id_user_Id = 3,
                            Name_purchase_order = "Orden de Compra 003",
                            Total_price_products = 850.25m
                        },
                        new
                        {
                            Id_purchase_order = 4,
                            Amount_items_in_the_order = 12,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_purchase_orders = false,
                            Id_category_purchase_order_Id = 4,
                            Id_company_Id = 2,
                            Id_department_Id = 4,
                            Id_module_Id = 5,
                            Id_movement_type_Id = 4,
                            Id_state_Id = 4,
                            Id_supplier_Id = 4,
                            Id_user_Id = 4,
                            Name_purchase_order = "Orden de Compra 004",
                            Total_price_products = 3750.00m
                        },
                        new
                        {
                            Id_purchase_order = 5,
                            Amount_items_in_the_order = 7,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_purchase_orders = false,
                            Id_category_purchase_order_Id = 5,
                            Id_company_Id = 3,
                            Id_department_Id = 5,
                            Id_module_Id = 5,
                            Id_movement_type_Id = 5,
                            Id_state_Id = 5,
                            Id_supplier_Id = 5,
                            Id_user_Id = 5,
                            Name_purchase_order = "Orden de Compra 005",
                            Total_price_products = 1980.99m
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("FluxSYS_backend.InvoicesProducts", b =>
                {
                    b.Property<int>("Id_invoice_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_invoice_product"));

                    b.Property<int>("Id_inventory_product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_invoice_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Unit_price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id_invoice_product");

                    b.HasIndex("Id_inventory_product_Id");

                    b.HasIndex("Id_invoice_Id");

                    b.ToTable("invoices_products");
                });

            modelBuilder.Entity("FluxSYS_backend.Users", b =>
                {
                    b.Property<int>("Id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_user"));

                    b.Property<DateTime?>("Date_delete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_insert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_restore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_update")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete_log_user")
                        .HasColumnType("bit");

                    b.Property<int>("Id_company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_department_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_module_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_position_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_rol_Id")
                        .HasColumnType("int");

                    b.Property<string>("Mail_user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password_user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone_user")
                        .HasColumnType("bigint");

                    b.HasKey("Id_user");

                    b.HasIndex("Id_company_Id");

                    b.HasIndex("Id_department_Id");

                    b.HasIndex("Id_module_Id");

                    b.HasIndex("Id_position_Id");

                    b.HasIndex("Id_rol_Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id_user = 1,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_user = false,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 6,
                            Id_position_Id = 1,
                            Id_rol_Id = 1,
                            Mail_user = "gael@example.com",
                            Name_user = "Sánchez Lobato Gael",
                            Password_user = "$2y$10$5E5W.r3psQwlD7qFPQMqx.X55Tm8YuTWfirUaSQO5XTk0t5v0CJ/S",
                            Phone_user = 1234567890L
                        },
                        new
                        {
                            Id_user = 2,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_user = false,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 6,
                            Id_position_Id = 1,
                            Id_rol_Id = 1,
                            Mail_user = "maximo@example.com",
                            Name_user = "Quintero Escobar Carlos Máximo",
                            Password_user = "$2y$10$5E5W.r3psQwlD7qFPQMqx.X55Tm8YuTWfirUaSQO5XTk0t5v0CJ/S",
                            Phone_user = 9876543210L
                        },
                        new
                        {
                            Id_user = 3,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_user = false,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 6,
                            Id_position_Id = 1,
                            Id_rol_Id = 1,
                            Mail_user = "gustavo@example.com",
                            Name_user = "Gutiérrez Canul Gustavo",
                            Password_user = "$2y$10$5E5W.r3psQwlD7qFPQMqx.X55Tm8YuTWfirUaSQO5XTk0t5v0CJ/S",
                            Phone_user = 1122334455L
                        },
                        new
                        {
                            Id_user = 4,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_user = false,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 6,
                            Id_position_Id = 1,
                            Id_rol_Id = 1,
                            Mail_user = "mia@example.com",
                            Name_user = "Raymundo Mata Isha Mia",
                            Password_user = "$2y$10$5E5W.r3psQwlD7qFPQMqx.X55Tm8YuTWfirUaSQO5XTk0t5v0CJ/S",
                            Phone_user = 2233445566L
                        },
                        new
                        {
                            Id_user = 5,
                            Date_insert = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Delete_log_user = false,
                            Id_company_Id = 1,
                            Id_department_Id = 1,
                            Id_module_Id = 6,
                            Id_position_Id = 1,
                            Id_rol_Id = 1,
                            Mail_user = "carlos@example.com",
                            Name_user = "Velázquez De La Cruz Carlos Yahir",
                            Password_user = "$2y$10$5E5W.r3psQwlD7qFPQMqx.X55Tm8YuTWfirUaSQO5XTk0t5v0CJ/S",
                            Phone_user = 3344556677L
                        });
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesProducts", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("CategoriesProducts")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesPurchaseOrders", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("CategoriesPurchaseOrders")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesSuppliers", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("CategoriesSuppliers")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("Departments")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.MovementsTypes", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.ClasificationMovements", "ClasificationsMovements")
                        .WithMany("MoventsTypes")
                        .HasForeignKey("Id_clasification_movement_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("MovementsTypes")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClasificationsMovements");

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.OrdersProducts", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrincipalModels.Inventories", "Inventories")
                        .WithMany("OrdersProducts")
                        .HasForeignKey("Id_inventory_product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrincipalModels.PurchaseOrders", "PurchaseOrders")
                        .WithMany("OrdersProducts")
                        .HasForeignKey("Id_purchase_order_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Inventories");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Positions", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("Positions")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.States", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("States")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesSuppliers", "CategoriesSuppliers")
                        .WithMany("Suppliers")
                        .HasForeignKey("Id_category_supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("Suppliers")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", "Modules")
                        .WithMany("Suppliers")
                        .HasForeignKey("Id_module_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CategoriesSuppliers");

                    b.Navigation("Companies");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.SuppliersProducts", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrincipalModels.Inventories", "Inventories")
                        .WithMany("SuppliersProducts")
                        .HasForeignKey("Id_inventory_product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", "Suppliers")
                        .WithMany("SuppliersProducts")
                        .HasForeignKey("Id_supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Inventories");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.Inventories", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesProducts", "CategoriesProducts")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_category_product_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", "Departments")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_department_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", "Modules")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_module_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.MovementsTypes", "MovementsTypes")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_movement_type_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.States", "States")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_state_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", "Suppliers")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Users", "Users")
                        .WithMany("Inventories")
                        .HasForeignKey("Id_user_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CategoriesProducts");

                    b.Navigation("Companies");

                    b.Navigation("Departments");

                    b.Navigation("Modules");

                    b.Navigation("MovementsTypes");

                    b.Navigation("States");

                    b.Navigation("Suppliers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.InventoryMovements", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesProducts", "CategoriesProducts")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_category_product_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", "Departments")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_department_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrincipalModels.Inventories", "Inventories")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_inventory_product_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", "Modules")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_module_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.MovementsTypes", "MovementsTypes")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_movements_types_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", "Suppliers")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Users", "Users")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("Id_user_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CategoriesProducts");

                    b.Navigation("Companies");

                    b.Navigation("Departments");

                    b.Navigation("Inventories");

                    b.Navigation("Modules");

                    b.Navigation("MovementsTypes");

                    b.Navigation("Suppliers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.Invoices", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("Invoices")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", "Departments")
                        .WithMany("Invoices")
                        .HasForeignKey("Id_department_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", "Modules")
                        .WithMany("Invoices")
                        .HasForeignKey("Id_module_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrincipalModels.PurchaseOrders", "PurchaseOrders")
                        .WithMany("Invoices")
                        .HasForeignKey("Id_purchase_order_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", "Suppliers")
                        .WithMany("Invoices")
                        .HasForeignKey("Id_supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Departments");

                    b.Navigation("Modules");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.PurchaseOrders", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesPurchaseOrders", "CategoryPurchaseOrders")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_category_purchase_order_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", "Departments")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_department_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", "Modules")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_module_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.MovementsTypes", "MovementsTypes")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_movement_type_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.States", "States")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_state_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", "Suppliers")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Users", "Users")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Id_user_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CategoryPurchaseOrders");

                    b.Navigation("Companies");

                    b.Navigation("Departments");

                    b.Navigation("Modules");

                    b.Navigation("MovementsTypes");

                    b.Navigation("States");

                    b.Navigation("Suppliers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.UserToken", b =>
                {
                    b.HasOne("FluxSYS_backend.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FluxSYS_backend.InvoicesProducts", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrincipalModels.Inventories", "Inventories")
                        .WithMany("InvoicesProducts")
                        .HasForeignKey("Id_inventory_product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrincipalModels.Invoices", "Invoices")
                        .WithMany("InvoicesProducts")
                        .HasForeignKey("Id_invoice_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Inventories");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("FluxSYS_backend.Users", b =>
                {
                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", "Companies")
                        .WithMany("Users")
                        .HasForeignKey("Id_company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", "Departments")
                        .WithMany("Users")
                        .HasForeignKey("Id_department_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", "Modules")
                        .WithMany("Users")
                        .HasForeignKey("Id_module_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Positions", "Positions")
                        .WithMany("Users")
                        .HasForeignKey("Id_position_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluxSYS_backend.Domain.Models.PrimitiveModels.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("Id_rol_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Departments");

                    b.Navigation("Modules");

                    b.Navigation("Positions");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesProducts", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("InventoryMovements");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesPurchaseOrders", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.CategoriesSuppliers", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.ClasificationMovements", b =>
                {
                    b.Navigation("MoventsTypes");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Companies", b =>
                {
                    b.Navigation("CategoriesProducts");

                    b.Navigation("CategoriesPurchaseOrders");

                    b.Navigation("CategoriesSuppliers");

                    b.Navigation("Departments");

                    b.Navigation("Inventories");

                    b.Navigation("InventoryMovements");

                    b.Navigation("Invoices");

                    b.Navigation("MovementsTypes");

                    b.Navigation("Positions");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("States");

                    b.Navigation("Suppliers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Departments", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("InventoryMovements");

                    b.Navigation("Invoices");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Modules", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("InventoryMovements");

                    b.Navigation("Invoices");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Suppliers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.MovementsTypes", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("InventoryMovements");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Positions", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.States", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrimitiveModels.Suppliers", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("InventoryMovements");

                    b.Navigation("Invoices");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("SuppliersProducts");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.Inventories", b =>
                {
                    b.Navigation("InventoryMovements");

                    b.Navigation("InvoicesProducts");

                    b.Navigation("OrdersProducts");

                    b.Navigation("SuppliersProducts");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.Invoices", b =>
                {
                    b.Navigation("InvoicesProducts");
                });

            modelBuilder.Entity("FluxSYS_backend.Domain.Models.PrincipalModels.PurchaseOrders", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("OrdersProducts");
                });

            modelBuilder.Entity("FluxSYS_backend.Users", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("InventoryMovements");

                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
